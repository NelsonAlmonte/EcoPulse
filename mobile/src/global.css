/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */

@import "@ionic/angular/css/core.css";
@import "tailwindcss";

/* Basic CSS for apps built with Ionic */
/* @import "@ionic/angular/css/normalize.css"; */
@import "@ionic/angular/css/structure.css";
@import "@ionic/angular/css/typography.css";
/* @import "@ionic/angular/css/display.css"; */

/* Optional CSS utils that can be commented out */
@import "@ionic/angular/css/padding.css";
/* @import "@ionic/angular/css/float-elements.css"; */
/* @import "@ionic/angular/css/text-alignment.css"; */
/* @import "@ionic/angular/css/text-transformation.css"; */
/* @import "@ionic/angular/css/flex-utils.css"; */

/**
 * Ionic Dark Mode
 * -----------------------------------------------------
 * For more info, please see:
 * https://ionicframework.com/docs/theming/dark-mode
 */

/* @import "@ionic/angular/css/palettes/dark.always.css"; */
/* @import "@ionic/angular/css/palettes/dark.class.css"; */
/* @import '@ionic/angular/css/palettes/dark.system.css'; */

/* Color theme */

:root {
  --md-sys-color-primary: rgb(0 107 94);
  --md-sys-color-surface-tint: rgb(0 107 94);
  --md-sys-color-on-primary: rgb(255 255 255);
  --md-sys-color-primary-container: rgb(159 242 226);
  --md-sys-color-on-primary-container: rgb(0 80 71);
  --md-sys-color-secondary: rgb(74 99 94);
  --md-sys-color-on-secondary: rgb(255 255 255);
  --md-sys-color-secondary-container: rgb(205 232 225);
  --md-sys-color-on-secondary-container: rgb(51 75 70);
  --md-sys-color-tertiary: rgb(68 97 121);
  --md-sys-color-on-tertiary: rgb(255 255 255);
  --md-sys-color-tertiary-container: rgb(202 230 255);
  --md-sys-color-on-tertiary-container: rgb(44 74 96);
  --md-sys-color-error: rgb(186 26 26);
  --md-sys-color-on-error: rgb(255 255 255);
  --md-sys-color-error-container: rgb(255 218 214);
  --md-sys-color-on-error-container: rgb(147 0 10);
  --md-sys-color-background: rgb(244 251 248);
  --md-sys-color-on-background: rgb(23 29 27);
  --md-sys-color-surface: rgb(244 251 248);
  --md-sys-color-on-surface: rgb(23 29 27);
  --md-sys-color-surface-variant: rgb(218 229 225);
  --md-sys-color-on-surface-variant: rgb(63 73 70);
  --md-sys-color-outline: rgb(111 121 118);
  --md-sys-color-outline-variant: rgb(190 201 197);
  --md-sys-color-shadow: rgb(0 0 0);
  --md-sys-color-scrim: rgb(0 0 0);
  --md-sys-color-inverse-surface: rgb(43 50 48);
  --md-sys-color-inverse-on-surface: rgb(236 242 239);
  --md-sys-color-inverse-primary: rgb(131 213 198);
  --md-sys-color-primary-fixed: rgb(159 242 226);
  --md-sys-color-on-primary-fixed: rgb(0 32 27);
  --md-sys-color-primary-fixed-dim: rgb(131 213 198);
  --md-sys-color-on-primary-fixed-variant: rgb(0 80 71);
  --md-sys-color-secondary-fixed: rgb(205 232 225);
  --md-sys-color-on-secondary-fixed: rgb(6 32 27);
  --md-sys-color-secondary-fixed-dim: rgb(177 204 197);
  --md-sys-color-on-secondary-fixed-variant: rgb(51 75 70);
  --md-sys-color-tertiary-fixed: rgb(202 230 255);
  --md-sys-color-on-tertiary-fixed: rgb(0 30 48);
  --md-sys-color-tertiary-fixed-dim: rgb(172 202 229);
  --md-sys-color-on-tertiary-fixed-variant: rgb(44 74 96);
  --md-sys-color-surface-dim: rgb(213 219 217);
  --md-sys-color-surface-bright: rgb(244 251 248);
  --md-sys-color-surface-container-lowest: rgb(255 255 255);
  --md-sys-color-surface-container-low: rgb(239 245 242);
  --md-sys-color-surface-container: rgb(233 239 236);
  --md-sys-color-surface-container-high: rgb(227 234 231);
  --md-sys-color-surface-container-highest: rgb(221 228 225);
  --md-extended-color-custom-color1-color: rgb(46 98 140);
  --md-extended-color-custom-color1-on-color: rgb(255 255 255);
  --md-extended-color-custom-color1-color-container: rgb(205 229 255);
  --md-extended-color-custom-color1-on-color-container: rgb(11 74 114);
}

.md-primary {
  background-color: var(--md-sys-color-primary);
}
.md-on-primary {
  stroke: var(--md-sys-color-on-primary);
  color: var(--md-sys-color-on-primary);
}

.md-primary-container {
  background-color: var(--md-sys-color-primary-container);
}
.md-on-primary-container {
  color: var(--md-sys-color-on-primary-container);
  stroke: var(--md-sys-color-on-primary-container);
}

.md-primary-fixed {
  background-color: var(--md-sys-color-primary-fixed);
}
.md-primary-fixed-dim {
  background-color: var(--md-sys-color-primary-fixed-dim);
}

.md-on-primary-fixed {
  color: var(--md-sys-color-on-primary-fixed);
  stroke: var(--md-sys-color-on-primary-fixed);
}
.md-on-primary-fixed-variant {
  color: var(--md-sys-color-on-primary-fixed-variant);
  stroke: var(--md-sys-color-on-primary-fixed-variant);
}

.md-secondary {
  background-color: var(--md-sys-color-secondary);
}
.md-on-secondary {
  color: var(--md-sys-color-on-secondary);
  stroke: var(--md-sys-color-on-secondary);
}

.md-secondary-container {
  background-color: var(--md-sys-color-secondary-container);
}
.md-on-secondary-container {
  color: var(--md-sys-color-on-secondary-container);
  stroke: var(--md-sys-color-on-secondary-container);
}

.md-secondary-fixed {
  background-color: var(--md-sys-color-secondary-fixed);
}
.md-secondary-fixed-dim {
  background-color: var(--md-sys-color-secondary-fixed-dim);
}

.md-on-secondary-fixed {
  color: var(--md-sys-color-on-secondary-fixed);
  stroke: var(--md-sys-color-on-secondary-fixed);
}
.md-on-secondary-fixed-variant {
  color: var(--md-sys-color-on-secondary-fixed-variant);
  stroke: var(--md-sys-color-on-secondary-fixed-variant);
}

.md-tertiary {
  background-color: var(--md-sys-color-tertiary);
}
.md-on-tertiary {
  color: var(--md-sys-color-on-tertiary);
  stroke: var(--md-sys-color-on-tertiary);
}

.md-tertiary-container {
  background-color: var(--md-sys-color-tertiary-container);
}
.md-on-tertiary-container {
  color: var(--md-sys-color-on-tertiary-container);
  stroke: var(--md-sys-color-on-tertiary-container);
}

.md-tertiary-fixed {
  background-color: var(--md-sys-color-tertiary-fixed);
}
.md-tertiary-fixed-dim {
  background-color: var(--md-sys-color-tertiary-fixed-dim);
}

.md-on-tertiary-fixed {
  color: var(--md-sys-color-on-tertiary-fixed);
  stroke: var(--md-sys-color-on-tertiary-fixed);
}
.md-on-tertiary-fixed-variant {
  color: var(--md-sys-color-on-tertiary-fixed-variant);
  stroke: var(--md-sys-color-on-tertiary-fixed-variant);
}

.md-error {
  background-color: var(--md-sys-color-error);
}
.md-on-error {
  color: var(--md-sys-color-on-error);
  stroke: var(--md-sys-color-on-error);
}

.md-error-container {
  background-color: var(--md-sys-color-error-container);
}
.md-on-error-container {
  color: var(--md-sys-color-on-error-container);
  stroke: var(--md-sys-color-on-error-container);
}

.md-background {
  background-color: var(--md-sys-color-background);
}
.md-on-background {
  color: var(--md-sys-color-on-background);
  stroke: var(--md-sys-color-on-background);
}

.md-surface {
  background-color: var(--md-sys-color-surface);
}
.md-on-surface {
  color: var(--md-sys-color-on-surface);
  stroke: var(--md-sys-color-on-surface);
}

.md-surface-variant {
  background-color: var(--md-sys-color-surface-variant);
}
.md-on-surface-variant {
  color: var(--md-sys-color-on-surface-variant);
  stroke: var(--md-sys-color-on-surface-variant);
}

.md-inverse-surface {
  background-color: var(--md-sys-color-inverse-surface);
}
.md-inverse-on-surface {
  color: var(--md-sys-color-inverse-on-surface);
  stroke: var(--md-sys-color-inverse-on-surface);
}

.md-surface-dim {
  background-color: var(--md-sys-color-surface-dim);
}
.md-surface-bright {
  background-color: var(--md-sys-color-surface-bright);
}

.md-outline {
  border-color: var(--md-sys-color-outline);
}
.md-outline-variant {
  border-color: var(--md-sys-color-outline-variant);
}

.md-surface-container {
  background-color: var(--md-sys-color-surface-container);
}
.md-surface-container-high {
  background-color: var(--md-sys-color-surface-container-high);
}
.md-surface-container-highest {
  background-color: var(--md-sys-color-surface-container-highest);
}

.md-surface-container-low {
  background-color: var(--md-sys-color-surface-container-low);
}
.md-surface-container-lowest {
  background-color: var(--md-sys-color-surface-container-lowest);
}

.issue-detail-modal {
  --width: 90%;
  --max-width: 400px;
  --height: auto;
  --border-radius: 16px;
  --box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1),
    0 4px 6px -4px rgb(0 0 0 / 0.1);
}

.issue-detail-modal .issue-detail-card {
  border: 0 !important;
  border-color: transparent !important;
  margin-bottom: 0px !important;
}

ion-toolbar {
  --background: var(--md-sys-color-surface-container);
  --color: var(--md-sys-color-on-surface)
}

.no-ripple{
  --ripple-color: transparent;
}

ion-input {
  --border-color: var(--md-sys-color-outline) !important;
  --color: var(--md-sys-color-on-surface) !important;
  --placeholder-color: var(--md-sys-color-on-surface-variant) !important;
  --highlight-color-invalid: var(--md-sys-color-error) !important;
  --highlight-color-valid: var(--md-sys-color-on-surface) !important;
}

ion-textarea {
  --border-color: var(--md-sys-color-outline) !important;
  --color: var(--md-sys-color-on-surface) !important;
  --placeholder-color: var(--md-sys-color-on-surface-variant) !important;
  --highlight-color-invalid: var(--md-sys-color-error) !important;
  --highlight-color-valid: var(--md-sys-color-on-surface) !important;
}